
Current App To Do:
  ✔ Convert weather center to a class @done(18-06-11 19:27)
  ✔ Store irrigation controller location in config file @done(18-06-28 15:47)
  ✔ It shouldn't be harcoded, so maybe we need a system config vs zone configs section @done(18-06-28 15:47)
  ✔ Determine where and how to track activation of a zone @done(18-06-11 19:27)
  ✔ Use location from config for weather center @done(18-07-09 08:56)
  ✔ Push Notifications @done(19-02-08 07:50)
    ✔ Enable Push notification on critical errors, events (Configurable) @done(18-09-05 08:48)
    ✔ Create push notification engine that supports multiple providers @done(18-08-27 18:57)
    ✔ Make push notifications configurable (what notifications to send) @done(18-08-27 18:57)
    ✔ Create a static/configurable file for all push notification provider (names, urls, etc). ConfigParser @done(18-08-27 18:57)
  ✔ Create a system settings ConfigParser @done(18-07-09 08:55)
  ✔ Create a base class for all rest mappers (default success response, serialization) @done(18-07-04 08:41)
  ✔ Migrate create zone rest function to REST mapper layer @done(18-07-09 08:55)
  ✔ Find out how and where to log all errors @done(18-06-14 18:34)
  ✔ Log everything through a centralized class @done(18-06-11 19:24)
  ✔ Create helper function to check if a key exists (rest mapper) before attempting to access it @done(18-07-09 08:56)
  ✔ Add database logging of errors @done(18-06-29 15:14)
  ✔ Determine where and how the pin mapping should be set @done(18-07-20 19:38)
  ✔ Create a portal to view/filter all errors @done(18-08-17 19:17)
  ✔ Look into serialization of the requests into the DBO types @done(18-07-09 08:56)
  ☐ Look into changing all JSON investigation into an data object first using json.loads (https://stackoverflow.com/questions/15476983/deserialize-a-json-string-to-an-object-in-python)
  ☐ Look into try catches to protect the code @done(18-06-11 19:28)
  ✔ Add the ability to setup the Raspberry PI available Pins and mapping to Relay. Need to think how the zone value will be edited as a result. @done(18-06-11 19:28)
  ☐ deactivate all zones on engine initialization to ensure a reboot turns off everything
  ✔ Store system settings in a config object ( https://wiki.python.org/moin/ConfigParserExamples ) @done(18-06-28 15:48)
  ✔ Implement ActivationHistory Table (Activations/Deactivations) @done(18-08-17 19:17)
    ✔ Is this not just a subset of decision history where Decision = Activate? @done(18-08-17 19:16)
  ✔ Change setting of rain delay to allow to cleraing it out (empty is okay) @done(18-07-20 19:23)
  ✔ WHen zone is activated, schedule is not being re-built. @done(18-07-19 17:09)
  ☐ Add rollbacks when db writes don't work
  ✔ Implement DecisionHistory Table (All the decisions made on every enabled zone) @done(18-06-14 18:34)
  ☐ pin setting in DB does not get picked up.
    ✔ Need to implement pin setting via zone @done(18-07-20 19:38)
    ☐ IMpelemnt pin setting via seperate function
      ☐ Trigger events to re-retrieve zone data when pin setting changes (only when done outside of a zone edit)
  ✔ If the zone is manually stopped, what will the end-time read? It should be set to when the user ended it, rather than the scheduled end-tiem @done(18-07-20 19:39)
  ✔ With the ucrrent edit model of delete->re-add, the decision history cannot be maintained. Need to find a way to update it. @done(18-07-20 19:39)
    ✔ Potential solution: Copy over to an archive decision history table before delete. @done(18-07-20 19:39)
  ☐ REST
    ☐ Change edits to "PUT" instead of "POST"
    ✔ Get all logs @done(18-07-23 08:49)
    ✔ Get all decision history @done(18-07-24 08:19)
    ✔ Do we want to add decision history to the zone rest mapper? Probably too much data? @done(18-07-24 08:19)
    ✔ Add pin config to the response mapper when retrieving a zone @done(18-07-23 08:53)
    ☐ Add ability to set a PIN
    ✔ Add PIN check to activate deactivate @done(18-07-23 08:54)
  ☐ Implement Rain delay feature
    ✔ On-Demand (Manual/Global) @done(18-07-09 08:57)
    ✔ Create simple UI to set rain delay @done(18-09-05 08:46)
    ☐ Add UI widget to set rain delay (date time picker)
    ☐ Do we need a enabled/disabled flag for rain delay? Is it intuitive enough to just have a date?
    ✔ Should rain delay automatically shut off any currently running zones? Yes @done(18-07-23 08:55)
    ✔ Should rain delay have a start and end time? @done(18-09-05 08:47)
    ✔ Store in database with caching and event handler mechanism @done(18-07-09 08:58)
    ☐ Architect so that it can be fed using automated sensors later on
    ✔ Build restful interface for it @done(18-07-09 08:58)
    ✔ Transient (app memory) or persistent (database)? Should a rain delay persist after reboot? @done(18-07-09 08:58)
  ✔ Evaluate whether or not a BO and DO are both required. They are really really similar. Maybe the DO can be extended to be an enriched DO (has some BO like capabilities, such as mappers) @done(18-06-14 18:35)
  ✔ Consider using a DataObject as the base class of a Business object. Enables segregation of data and logic, but keeps them related. @done(18-06-14 18:35)
  ✔ All the data objects default to TRUE for enabled. Need to make that dynamic?? @done(18-07-10 08:11)
  ☐ Work on the logic to edit a zone.
    ✔ Edit entire zone @done(18-07-23 08:56)
    ☐ Partial edits (only the fields specified)
  ✔ Determine how to handle setting of hte PIN. Datbase contains pins. We need to specify in the zone editor which pin it belongs to. @done(18-07-23 08:56)
  ✔ Add data validation to create zone and return back a hTTP 400 for bad data @done(18-07-09 08:58)
  ☐ Scheduling Changes
    ✔ Support: Day/Time (Monday, Tuesday @ 10 am) @done(18-06-25 20:23)
    ☐ Support: Time/Frequence (10am every 6 hours)
    ✔ Create next run schedule @done(18-06-25 20:23)
      ✔ [zoneid] = zone, zone, start datetime, end datetime @done(18-06-25 20:23)
      ☐ manual activation = override the next run schedule?? && update current running list
        ☐ Do we need to calculate if manual activation + duration > scheduled zone start time?
        ☐ Should we add notifications when a zone is manually activated and there is a scheduled one within X amount of time?
        ☐ Implement a "skip next watering" feature for specific zones? (is this basically a zone specific rain delay?)
          ☐ This seems like rain delay with a start-end period
          ☐ If so, does this mesh with a global rain delay? is the the one that lasts longer takes priority?
      ✔ manual deactivation = remove from current running, don't update next run @done(18-07-23 08:56)
    ✔ Look into locks to manage synchronization between manual manipulation of the zone and automatic manipulation of hte zone @done(18-07-01 15:40)
    ✔ Should rain delays be stored within a database. Probably so we can retrieve it if the system reboots. @done(18-07-09 08:59)
    ✔ Global rain delay stored in persistent storage @done(18-06-29 15:15)
    ✔ Adjust rain delay to be a date-time so we have a reference of when to end it. @done(18-07-01 15:40)
    ✔ Should the next run schedule accomodate for rain delays and build the next run schedule with estimatations AFTer the rain delay? @done(18-06-29 15:15)
    ✔ Should the nextRunSchedule be embedded within it's own class and just read from the engine? This will keep any consumers of the schedule away from the engine @done(18-06-26 08:34)
    ✔ Add observer in the schedule manager class to handle scenario where zone data changes and schedule needs to be re-built @done(18-06-29 15:15)
    ☐ Implement a system manager for the RPI (reboot/shutdown)
    ☐ Look into blueprints to properly segreate the rest functions in the app.py class
    ✔ When deleting a zone, if it cascades down, will it also delete the Relay to RPI mapping? Hopefully not? @done(18-07-23 09:00)
    ✔ Implement a kill switch (shutoff all zoens) in the system settings @done(18-07-23 09:00)
    ✔ Debug why dashboard is not returning all the right data @done(18-07-24 08:18)
    ✔ Zone shouldn't be 'enable-able' if the PIN config hasn't been set @done(18-09-05 17:36)
      ✔ Return error to UI if pin config not set @done(18-09-05 17:36)
    ☐ Clean up logging across the board
    ✔ Event manager shuld log all activations/deactivations @done(18-08-27 19:00)
    ✔ Creating restful service to get events and logs @done(18-08-17 19:13)
    ✔ Fails to activate when kill switch is on @done(18-07-23 19:22)
    ☐ Should a lot of the error checking on the rest mappers be moved one/two layers deeper so they aren't only tied to rest requests?
    ✔ Adjust architecutre to remove cyclical dependencies. Nothing should depend on engine, it should depend on everything else. @done(18-06-28 08:10)
      ✔ Refactor zonecontroller to manage all activations of zones and the corresponding list managmenet. Remove the list management for the engine. Zone controller will also interface with the Zone->RPI bridge. @done(18-06-28 08:10)
    ☐ Dashboard Information
      ✔ Zone @done(18-08-27 19:00)
        ✔ Last Run @done(18-08-16 08:42)
        ✔ Next Run (Rain Delay Factor) @done(18-08-16 08:42)
        ✔ Current Status @done(18-08-27 19:00)
          ✔ Disabled/Enabled @done(18-08-17 19:12)
          ✔ Zone On/Off @done(18-08-17 19:12)
          
        ☐ Links
          ✔ Decision History @done(18-08-16 08:42)
          ☐ Activation History
      
      ☐ Global
        ✔ Rain Delay @done(18-08-17 19:12)
        ☐ System uptime
        ✔ Logs @done(18-08-17 19:12)
      ☐ Current weather?? (later. NEed to expose rest API to get this)
      ✔ Set decision history to return back in desc order @done(18-08-15 16:39)
      ☐ Add an activation history on the UI (it's also in the decision history)
      ✔ Add overarching dashboard widget (weather, kill switch, etc) @done(18-08-27 19:00)
      ✔ Add pagination for the logs @done(19-02-26 08:20)
      ✔ Add UI widget to select duration of zone activation @done(19-02-26 08:21)
      ✔ Set kill switch and rain delay as toggle buttons? Or put them in the settings UI? @done(19-02-08 07:58)
      ✔ only pdate kill switch or rain delay  if they cghange @done(18-09-05 08:45)
      ☐ Edit a zone from UI
      ✔ Delete a zone from UI @done(19-03-13 08:19)
      ✔ Kill switch needs to shut off any currently running zones @done(19-02-08 07:58)
      ☐ Add the ability to set the location of the city
      ☐ Prepopulate city/state in the location list (https://blog.teamtreehouse.com/creating-autocomplete-dropdowns-datalist-element)
      ☐ Optimizations
        ☐ Update all javascript to use deferred loads
      ✔ Add a "more logs available" to teh logs response so teh UI knows if it can continue pagination @done(19-02-26 08:25)
      ✔ Add pagination UI @done(19-02-26 08:25)
      ☐ Add patch oepration to support disabling of zone from the dashboard
      ✔ Create a view zones section to dump all the zone info and allow editing @done(19-03-07 08:21)
      ✔ Add confirmation screen after zone is created @done(19-03-20 08:34)
      ✔ Add the ability to create relay -> RPI pin mappings through service @done(19-03-20 08:34)
      ✔ Add service tor return eligible relays @done(19-04-24 08:13)
      ✔ Enable dropdown selection for relay IDs in the create and edit dialogs @done(19-04-25 08:22)
      ✔ Create separate UI for mapping relays to zones @done(19-04-30 08:50)
      ☐ Create one UI for all zones to relays mappings
      ✔ Expose weather as API @done(19-04-24 08:13)
      ☐ Create settings for weather center short and long term durations
      ☐ Merge create_zone and zone manager  inot one javascript since they have very common capabilities
      ✔ Fix bug where the 2nd schedule added doesn't let you modify the schedule days (issue with label association?) @done(19-04-30 08:50)
      ☐ Google Home iNtegration + Basic Digest
      ☐ Implement HTTPS
      ✔ Implement delete for pin relays @done(19-04-30 08:49)
      ✔ Fix alignment on screen when displaying mapped pin relays @done(19-05-01 08:34)
      ☐ Fix push bullet users screent to display user rows as labels instead of input boxes
      ✔ Fix dashboard rows so they don't grow so fat when there are only 1 or 2 @done(19-05-01 08:52)
      ✔ Clean dashboard to display zone settings a bit more asthetically @done(19-05-07 18:21)
      ✔ Fix rain delay display on UI to be more human readable @done(19-05-17 09:23)
      ☐ Fix dashboard.css and collapse allt he zone segments that relate tot he same class into one block
      ✔ Make edit button on dashboard actually go to the edit zone screen @started(19-05-07 17:45) @done(19-05-07 18:21) @lasted(36m17s)
      ✔ Checkmark and X for dashboard enabled/disabled indicators @done(19-05-03 09:14)
      ☐ Update all colors to use the centralized color variables. This will make theming much easier.
      ☐ Make themes dynamically selectable
      ✔ Make dashboard colmn header use ellipses for overflow instead of growing vertically @done(19-05-09 22:17)
      ✔ Convert dashboard to grids instead of flexbox @started(19-05-08 08:35) @done(19-05-09 22:17) @lasted(1d13h42m19s)
      ☐ Convert decision history in dashboard to use grids
      ☐ Limit dashboard history to 10
      ☐ Create a new screen for full history (maybe zone manager)
      ✔ Convert logs screen to a CSS Grid @started(19-05-17 09:23) @done(19-05-17 22:55) @lasted(13h32m36s)
      ✔ Change times to 12 hour format @done(19-05-17 22:55)
      ☐ Make hour format (12/24)  a setting option
      ☐ Make all the date format settings options in the settings panel
      ✔ Load a default screen when teh settings header is selected @done(19-05-23 08:54)
      ✔ Add notification section to PIN/Relay screen @done(19-05-23 08:54)
      ☐ Make text boxes in pin relay section smaller/more flexible so button isn't hidden
      ✔ Change pin/relay mapping section to a grid view @done(19-05-22 09:12)
      ✔ Update push bullet screen with nicer buttons @done(19-05-23 08:53)
      ✔ Update push bullet screen with text/input styling for display/input @done(19-05-27 19:59)
      ✔ Update push bullet screen with grid @done(19-05-27 20:00)
      ✔ loadPushNotificationSettings uses dual WHEN. How to pass alertType/alertContent into the invocation after. @done(19-05-23 08:54)
      ☐ Fix fonts to use variables and find a better font set
      ☐ Add logging of important events (when zone is is activated from engine)
      ☐ Add ability to purge logs older than X
      ☐ Add ability to purge all logs
      ☐ Add ability to refresh logs without reloading page
      ✔ Update create zone page to CSS grid @done(19-05-27 19:57)
      ✔ Fix notification on create zone screen and try to scroll up automatically @done(19-05-29 09:03)
      ✔ Fix zone manager formatting. Looks weird... @done(19-05-27 19:57)
      ☐ Add to settings screen: console and debug log level configurations
      ✔ Deprecate the displayAlert in shared that doesn't use containers @done(19-05-31 08:44)
      ☐ Add logic to prevent invalid schedule times (e.g. start after end)
      ☐ Find a way to move gh-icons from css to images folder
      ☐ Add Notifications for:
        ✔ Saving settings (kill switch) @done(19-06-07 09:17)
        ☐ Successfully activating a zone (+ reload page, or change X to checkmark without reload)
      ☐ Convert all PX to EM or REM
      ☐ Update github buttons to follow colour scheme @started(19-06-10 08:19)
      ☐ Look at all the $.when() and add negative cases
      ☐ Re-factor all CSS to create sections for events/services/etc
      ☐ Update PyDriller to allow reading all committs (currently only reads main branch from bitbucket)
      ☐ Add refresh button to app updater page
      ☐ Add time to Next run
      ✔ Reset schedule counter when create or edit zone is reloaded @done(19-06-08 16:35)
      ☐ Creat a nice UI for rain delay setter
      ✔ Fix bug where edit zone fails because of a duplicate zone name check @done(19-06-08 16:29)
      ✔ Create an isDirty cache so the zones require refresh on changes @done(19-06-08 16:29)
      ✔ Fix bug where schedule type contains relay data as well @done(19-06-08 16:29)
      ☐ Add 5 second refresh for "IsRunning" refresh (toggle on/off) that updates the isRunning status on the dashboard
      ☐ Find out how to reboot the python app from teh app itself
      ☐ Add an engine status (update memory for last engine run and post to dashboard)
      ☐ Add current time to dashboard
      ☐ Make logging level configurable with drop down in settings
      ☐ Add a trace level for logging for the really obscure stuff (release locks)
      ☐ Update zone controller to put an info log when zone is started, currently only activates when done automatically, not manually
      ☐ Implement a safety shutoff timer so that if the engine fails, there is a backup timer to turn the water off.
        ☐ Engine check should reset the safety timer everytime it runs and when the zone deactivates, teh safety timer is destroyed
        ☐ Safety timer length config should be configurable
      ☐ Run the flask app using Gunicorn/Nginx and see if stability improves
      ✔ Fix: Edit zone removes history @done(19-07-02 08:39)
        ✔ Not sure how to fix with the ORM. @done(19-07-02 08:39)
        ✔ Maybe decision history needs to be it's own entity and not tied to the zone? (historic?) @done(19-07-02 08:39)
      ✔ Fix: No weather data in decision history? Click to get more details? @done(19-07-02 08:38)
      ✔ Fix: Zone relay is not pre-populating @done(19-06-24 20:15)
      ☐ Create a decision history screen for decisions on everything
        ☐ Add filter for zone, decision type, etc
      
      ✔ Add engine health check to dashboard @started(19-07-02 08:41) @done(19-07-02 18:20) @lasted(9h39m57s)
      ☐ add toggle switch to restart engine/turn off engine @started(19-07-02 08:41)
      ✔ Add current time to dashboard @started(19-07-02 08:44) @done(19-07-02 18:21) @lasted(9h37m1s)

      ✔ Change date on dashboard to datetime @done(19-07-02 18:21)
      ✔ fix: Crash when weather api times out @done(19-07-08 08:27)
      ☐ Create a service for is runing to enable dashboard to update itself frequently
        ☐ Create drop down to select refresh frequency
      ☐ Make the open weather map API key pull from teh settings file instead of hard code
      ☐ Make the push bullet API key pull from the settings file instead of hard coded
      ☐ Figure out algorithm for rain percentages
      ☐ Add search function to logs
      ☐ Edit zone fails on dashboard if zone manager isn't called first. It must not have the templates ready... @started(19-07-05 08:37)
      ✔ Add entry for WeatherFailed. Adding to decision history but it's not working @started(19-07-03 08:50) @done(19-07-05 08:36) @lasted(1d23h46m44s)
      ✔ Add support for API failed reason code @done(19-07-05 08:32)
      ☐ Add inline refresh in dashboard for:
        ☐ Is running
        ☐ Engine last ran
        ☐ Add refresh interval setting
      
      ☐ change the evaluating zones FLAG to a hard lock. See if the lock (released in a finally block)
      ☐ Save PB settings doesn't work. there's no function for savePushBulletUser defined. 
      ☐ Make color scheme savable in settings.ini
      ☐ Fix dashboard event timme being 4 hours off





      



Future Considerations:
  ☐ Wire up a rain sensor to RPI and feed that data into the system to force an automated rain delay.
  ☐ Wire up water flow meter to the main valve and calculate how much is being used per zone. (https://www.adafruit.com/product/828 || https://www.adafruit.com/product/833)
  ☐ Consider an OAuth implementation if this is going public [Need to research permissioning]
    ☐ Can't do this with dialogflow. They only support basic digest auth.
  ☐ Integration to Google home (Turn on Zone by ID, by name. Check status of watering, get History)
  ☐ What kind of API gateway to manage access control in front of Flask
    ☐ Only required when public (digest basic auth)
  ☐ Implement GCM and an Android app
  ☐ Create notifications toggle per notification provider
  Testing commit stuff.
  ✔ 






